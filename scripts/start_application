#!/bin/bash

set -e

CATALINA_HOME='/opt/tomcat'
DEPLOY_TO_ROOT='true'
#CONTEXT_PATH='##CONTEXT_PATH##'
SERVER_HTTP_PORT='80'

TEMP_STAGING_DIR='/tmp/codedeploy-deployment-staging-area'
WAR_STAGED_LOCATION="$TEMP_STAGING_DIR/SampleMavenTomcatApp.war"
HTTP_PORT_CONFIG_XSL_LOCATION="$TEMP_STAGING_DIR/configure_http_port.xsl"

# In Tomcat, ROOT.war maps to the server root
if [[ "$DEPLOY_TO_ROOT" = 'true' ]]; then
    CONTEXT_PATH='ROOT'
fi

# Remove unpacked application artifacts
if [[ -f $CATALINA_HOME/webapps/$CONTEXT_PATH.war ]]; then
    rm $CATALINA_HOME/webapps/$CONTEXT_PATH.war
fi
if [[ -d $CATALINA_HOME/webapps/$CONTEXT_PATH ]]; then
    rm -rfv $CATALINA_HOME/webapps/$CONTEXT_PATH
fi

# Copy the WAR file to the webapps directory
cp $WAR_STAGED_LOCATION $CATALINA_HOME/webapps/$CONTEXT_PATH.war

# Configure the Tomcat server HTTP connector
TOMCAT_DIR="/opt/tomcat"
CONF_FILE="$TOMCAT_DIR/conf/server.xml"
HTTP_PORT=8080  # Define the desired HTTP port

# Update the server.xml file with the desired HTTP connector configuration
if ! grep -q "Connector port=\"$HTTP_PORT\"" "$CONF_FILE"; then
  echo "Configuring HTTP connector in server.xml for port $HTTP_PORT..."
  sudo sed -i "/<Service name=\"Catalina\">/a \
    <Connector port=\"$HTTP_PORT\" protocol=\"HTTP/1.1\" \
               connectionTimeout=\"20000\" \
               redirectPort=\"8443\" />" "$CONF_FILE"
else
  echo "HTTP connector for port $HTTP_PORT is already configured."
fi

# Start Tomcat
echo "Starting Tomcat server..."
sudo $TOMCAT_DIR/bin/startup.sh
echo "Tomcat started successfully."

